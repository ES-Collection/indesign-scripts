// Set to 7.0 scripting object model (Indesign CS5)app.scriptPreferences.version = 7.0;#include utilities/util.jsxvar util = FORWARD.Util;var DEFAULT_PAGE_TO_EXPORT = "1";var EXPORT_RESOLUTION = 15.5; // This will shrink an 11.5 inch document to 178 pixels.var TEMP_FOLDER = '/tmp';var DEFAULT_EMAIL = 'lavey@forward.com';var myDisplayDialog = function( defaultPageNumber, defaultFilename, defaultEmail ) {    var defaultText = defaultText || "";        var myDialog = app.dialogs.add({        name: "Send page as jpeg"    });        var myMainColumn;    var myColumns     var myRows = [];    var myPageNumberInput;    var myFilenameInput;    var myEmailInput;            myMainColumn = myDialog.dialogColumns.add().dialogRows.add().borderPanels.add().dialogColumns.add();    myRows[0] = myMainColumn.dialogRows.add();    myRows[1] = myMainColumn.dialogRows.add();    myRows[2] = myMainColumn.dialogRows.add();        // Page number input row    myRows[0].dialogColumns.add().staticTexts.add({        staticLabel: "Page:"    });    myPageNumberInput = myRows[0].dialogColumns.add().textEditboxes.add({          minWidth: 150,          editContents: defaultPageNumber || ''    });         // Filename input row    myRows[1].dialogColumns.add().staticTexts.add({        staticLabel: "Filename:"    });    myFilenameInput = myRows[1].dialogColumns.add().textEditboxes.add({          minWidth: 300,          editContents: defaultFilename || ''    });             // Email input row    myRows[2].dialogColumns.add().staticTexts.add({        staticLabel: "Email to send to:"    });    myEmailInput = myRows[2].dialogColumns.add().textEditboxes.add({          minWidth: 300,          editContents: defaultEmail || ''    });             var myResult = myDialog.show();    var pageNumber = myPageNumberInput.editContents;    var filename = myFilenameInput.editContents;    var email = myEmailInput.editContents;        //        myDialog.destroy() cannot be used because of a bug in ID CS5    //        on 64-bit machines. They totally crash. So we'll just    //        have the dialog boxes cluttering up non-Javascript-related    //        InDesign memory, but it's really unlikely to be all that bad.        //        myDialog.destroy();        if (myResult == false) {        exit();    }        return {        pageNumber: pageNumber,        filename: filename,        email: email    };};if (app.documents.length === 0) util.errorExit('Please open a document and try again.');var doc = app.activeDocument;var newFileName = doc.name.replace(/\.indd$/, '.jpg');var dialogResult = myDisplayDialog( DEFAULT_PAGE_TO_EXPORT, newFileName, DEFAULT_EMAIL );if (!dialogResult) exit();var pageToExport = dialogResult.pageNumber;var email = dialogResult.email;var filename = dialogResult.filename;// Make them type in an email address.if (!filename) util.errorExit( 'Please type in a filename for the jpg attachment and try again.' );// Clean up input.pageToExport.replace(/^\s*(.*?)/g, '$1');if (!doc.pages.itemByName( pageToExport ).isValid) {    util.errorExit( "Page " + pageToExport + " doesn't exist in this document. Try again." );}var file = File( TEMP_FOLDER + '/' + filename );// add '.jpg' if it (or a variation on it) is not already thereif (!file.name.match( /\.jpe?g$/i )) {    var newFilePath = file.fullName + '.jpg';    file.close();    file = File( newFilePath );}// Make sure it's not already there.if (file.exists) {    util.errorExit( "That file " + file.name + " already exists in " + TEMP_FOLDER + ", which is where I'm " +                    "storing it before sending it to " + email + ". Please delete that file " +                    "and try again.");}app.jpegExportPreferences.properties = {    exportingSpread: false,    jpegQuality: JPEGOptionsQuality.HIGH,    jpegExportRange: ExportRangeOrAllPages.EXPORT_RANGE,    pageString: pageToExport,    embedColorProfile: false,    jpegColorSpace: JpegColorSpaceEnum.RGB,    antiAlias: true,    exportResolution: EXPORT_RESOLUTION};app.activeDocument.exportFile(ExportFormat.JPG, file);// Send it.var mailScript = 'set recipientName to ""\r'                 + 'set recipientAddress to "' + email + '"\r'                 + 'set theSubject to "Tiny jpeg of page ' + pageToExport + ' of ' + doc.name + ' coming your way."\r'                 + 'set theContent to ""\r'                 + 'set theAttachment to "' + file.fullName + '"\r'                 + 'tell application "Mail"\r'               + '  set theMessage to make new outgoing message with properties {subject:theSubject, content:theContent, visible:true}\r'               + '  tell content of theMessage\r'               + '    make new attachment with properties {file name:theAttachment} at after last paragraph\r'               + '  end tell\r'               + '  tell theMessage\r'               + '    make new to recipient with properties {name:recipientName, address:recipientAddress}\r'               + '    send\r'               + '  end tell\r'               + 'end tell';app.doScript (mailScript, ScriptLanguage.APPLESCRIPT_LANGUAGE);file.remove();alert ("The file " + unescape(file.name) + " has been emailed to " + email + ".");